import pygame
import sys

# Initialize Pygame
pygame.init()

# Set up the screen dimensions
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("My Pet Skunk")

# Colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

def play_music():
    # Play background music
    pygame.mixer.music.load("skunkmusic.mp3")
    pygame.mixer.music.play(-1)  # Loop the music indefinitely

def stop_music():
    pygame.mixer.music.stop()

def play_phone_ring():
    # Play phone ringing sound
    pygame.mixer.Sound("phonering.mp3").play()

def get_player_name(screen):
    # Clear the screen
    screen.fill(BLACK)

    # Draw prompt text
    font = pygame.font.SysFont(None, 36)
    text = font.render("Enter your name:", True, WHITE)
    text_rect = text.get_rect(center=(screen_width // 2, screen_height // 2 - 50))
    screen.blit(text, text_rect)

    # Update the display
    pygame.display.flip()

    # Input loop
    input_text = ""
    input_rect = pygame.Rect(screen_width // 2 - 100, screen_height // 2, 200, 50)
    active = True
    while active:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_RETURN:
                    active = False
                elif event.key == pygame.K_BACKSPACE:
                    input_text = input_text[:-1]
                else:
                    input_text += event.unicode

        # Clear the input area
        pygame.draw.rect(screen, BLACK, input_rect)

        # Render the input text
        font = pygame.font.SysFont(None, 36)
        text_surface = font.render(input_text, True, WHITE)
        screen.blit(text_surface, (input_rect.x + 5, input_rect.y + 5))

        # Draw input area rectangle
        pygame.draw.rect(screen, WHITE, input_rect, 2)

        # Update the display
        pygame.display.flip()

    return input_text

def loading_screen(screen):
    # Play music
    play_music()

    # Loading progress
    loading_progress = 0

    # Main loop
    while loading_progress <= 100:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        # Clear the screen
        screen.fill(BLACK)

        # Draw loading text
        font = pygame.font.SysFont(None, 36)
        text = font.render("Loading...", True, WHITE)
        text_rect = text.get_rect(center=(screen_width // 2, screen_height // 2 - 50))
        screen.blit(text, text_rect)

        # Draw loading progress bar
        pygame.draw.rect(screen, GREEN, (screen_width // 2 - 150, screen_height // 2, 300, 30))
        pygame.draw.rect(screen, WHITE, (screen_width // 2 - 150, screen_height // 2, loading_progress * 3, 30))

        # Update the display
        pygame.display.flip()

        # Simulate loading progress
        loading_progress += 1
        pygame.time.wait(20)  # Adjust the wait time for smoother progress bar animation

    # Once loading is complete, return control to the main part of the game
    player_name = get_player_name(screen)
    title_screen(screen, player_name)


def title_screen(screen, player_name):
    # Clear the screen
    screen.fill(BLACK)

    # Draw title text
    font = pygame.font.SysFont(None, 72)
    text = font.render("My Pet Skunk", True, WHITE)
    text_rect = text.get_rect(center=(screen_width // 2, screen_height // 2 - 100))
    screen.blit(text, text_rect)

    # Draw start button
    pygame.draw.rect(screen, GREEN, (screen_width // 2 - 100, screen_height // 2 - 25, 200, 50))
    font = pygame.font.SysFont(None, 36)
    text = font.render("Start", True, BLACK)
    text_rect = text.get_rect(center=(screen_width // 2, screen_height // 2))
    screen.blit(text, text_rect)

    # Draw quit button
    pygame.draw.rect(screen, RED, (screen_width // 2 - 100, screen_height // 2 + 75, 200, 50))
    text = font.render("Quit", True, BLACK)
    text_rect = text.get_rect(center=(screen_width // 2, screen_height // 2 + 100))
    screen.blit(text, text_rect)

    # Update the display
    pygame.display.flip()

    # Wait for the player to click the start or quit button
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.MOUSEBUTTONDOWN:
                mouse_pos = pygame.mouse.get_pos()
                if screen_width // 2 - 100 <= mouse_pos[0] <= screen_width // 2 + 100:
                    if screen_height // 2 - 25 <= mouse_pos[1] <= screen_height // 2 + 25:
                        # Start button clicked
                        stop_music()  # Stop the music
                        play_phone_ring()  # Play phone ringing sound
                        dialogue_lines = [
                            f"Hi, {player_name}, I have some news.",
                            "Aunt Gertrude is dead.",
                            "What do you mean, 'who's Aunt Gertrude?'",
                            "Okay, well, she's dead. And she left you something in her will.",
                            "No, it's not money...",
                            "She left you her pet skunk, Breezy.  No, I'm not kidding.",
                            "You need to go pick up Breezy right now. Take good care of him.",
                            "Bye."
                        ]
                        display_dialogue(screen, dialogue_lines)
                        # After dialogue, load and display aunthouse.jpeg
                        display_image(screen, "aunthouse.jpeg")
                        return
                    elif screen_height // 2 + 75 <= mouse_pos[1] <= screen_height // 2 + 125:
                        # Quit button clicked
                        pygame.quit()
                        sys.exit()

def display_image(screen, image_path):
    # Load image
    image = pygame.image.load(image_path)
    image_rect = image.get_rect()

    # Center the image on the screen
    image_rect.center = (screen_width // 2, screen_height // 2)

    # Display the image
    screen.blit(image, image_rect)

    # Update the display
    pygame.display.flip()

    # Wait for a key press or mouse click to continue
    waiting = True
    while waiting:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN or event.type == pygame.MOUSEBUTTONDOWN:
                waiting = False


def display_dialogue(screen, dialogue_lines):
    # Display dialogue lines with typewriter effect
    font = pygame.font.SysFont(None, 24)
    y_position = screen_height - 150

    for line in dialogue_lines:
        displayed_text = ""
        for char in line:
            # Render displayed text
            displayed_text += char
            text = font.render(displayed_text, True, WHITE)
            text_rect = text.get_rect(left=100, top=y_position)

            # Clear the screen
            screen.fill(BLACK)

            # Draw speech bubble
            pygame.draw.rect(screen, WHITE, (50, y_position - 30, screen_width - 100, 60), 2)

            # Blit the text onto the screen
            screen.blit(text, text_rect)

            # Update the display
            pygame.display.flip()

            # Pause briefly to simulate typewriter effect
            pygame.time.wait(30)  # Adjust the wait time as needed

        # Wait for a key press to continue to the next line
        waiting = True
        while waiting:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                elif event.type == pygame.KEYDOWN or event.type == pygame.MOUSEBUTTONDOWN:
                    waiting = False


# Display loading screen
loading_screen(screen)
